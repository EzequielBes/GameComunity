generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  password String
  Profile  Profile?

  @@map("user")
}

model Profile {
  id        String   @id @default(uuid())
  username  String   @unique
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  ProfilesGames ProfilesGames[]
  friendList    FriendShip[]    @relation("amigos")
  perfil        FriendShip[]

  @@map("profile")
}

model FriendShip {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  friends   Profile[] @relation("amigos")
  perfil    Profile   @relation(fields: [profileId], references: [id])
  profileId String

  @@map("friends")
}

model ProfilesGames {
  id String @id @default(uuid())

  profile         Profile @relation(fields: [profileUsername], references: [username])
  profileUsername String
  Games           Games?  @relation(fields: [gamesId], references: [id])
  gamesId         String?

  @@map("teste")
}

model Games {
  id          String          @id @default(uuid())
  name        String          @unique
  description String
  tag         GameTags        @relation(fields: [gameTagsId], references: [id])
  jogadores   ProfilesGames[]
  gameTagsId  String
}

model GameTags {
  id      String  @id @default(uuid())
  nametag String
  games   Games[]
  gamesId String

  @@map("gamestags")
}

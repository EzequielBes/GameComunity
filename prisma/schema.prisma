generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  password String
  Profile  Profile[]

  @@map("user")
}

model Profile {
  username  String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  friend          FriendUser[]
  profilesGamesId String?
  ProfilesGames   ProfilesGames[]

  @@map("profile")
}

model FriendUser {
  id              String   @id @default(uuid())
  Profile         Profile? @relation(fields: [profileUsername], references: [username])
  Friend          Friend?  @relation(fields: [friendId], references: [id])
  profileUsername String?
  friendId        String?
}

model Friend {
  id         String       @id @default(uuid())
  friendUser FriendUser[]

  @@map("friend")
}

model ProfilesGames {
  id String @id @default(uuid())

  profile         Profile @relation(fields: [profileUsername], references: [username])
  profileUsername String
  Games           Games?  @relation(fields: [gamesId], references: [id])
  gamesId         String?

  @@map("teste")
}

model Games {
  id          String          @id @default(uuid())
  name        String          @unique
  description String
  tag         GameTags?       @relation(fields: [id], references: [id])
  gametagid   String
  jogadores   ProfilesGames[]
}

model GameTags {
  id      String  @id @default(uuid())
  nametag String
  games   Games[]

  @@map("gamestags")
}
